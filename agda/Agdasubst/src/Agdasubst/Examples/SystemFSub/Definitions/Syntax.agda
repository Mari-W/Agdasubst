-- Author(s): Hannes Saffrich (2024) and Marius Weidner (2025)
module Agdasubst.Examples.SystemFSub.Definitions.Syntax where

open import Agdasubst.Prelude public

open import Relation.Binary.PropositionalEquality using (refl)

data Sort : SORT where
  expr : Sort Bind 
  type : Sort Bind
  cstr : Sort Bind
  kind : Sort NoBind
  cind : Sort NoBind 

open WithSort Sort public 
open Meta public

data _‚ä¢_ : SCOPED where
  `_        : S ‚àã s ‚Üí S ‚ä¢ s     
  Œªx_       : (expr ‚à∑ S) ‚ä¢ expr ‚Üí S ‚ä¢ expr
  ŒõŒ±_       : (type ‚à∑ S) ‚ä¢ expr ‚Üí S ‚ä¢ expr
  ‚àÄ[Œ±‚äë_]_   : S ‚ä¢ type ‚Üí (type ‚à∑ S) ‚ä¢ type ‚Üí S ‚ä¢ type
  _¬∑_       : S ‚ä¢ expr ‚Üí S ‚ä¢ expr ‚Üí S ‚ä¢ expr
  _‚Ä¢_       : S ‚ä¢ expr ‚Üí S ‚ä¢ type ‚Üí S ‚ä¢ expr
  _‚áí_       : S ‚ä¢ type ‚Üí S ‚ä¢ type ‚Üí S ‚ä¢ type
  `tt       : S ‚ä¢ expr
  ùüô         : S ‚ä¢ type
  _‚à∂‚äë_      : S ‚ä¢ type ‚Üí S ‚ä¢ type ‚Üí S ‚ä¢ cind 
  ‚òÖ         : S ‚ä¢ kind
  sat       : S ‚ä¢ cstr 
  ‚ú∞         : S ‚ä¢ kind

variable
  e e‚ÇÅ e‚ÇÇ e‚ÇÉ e‚ÇÑ e‚Ä≤ e‚ÇÅ‚Ä≤ e‚ÇÇ‚Ä≤ e‚ÇÉ‚Ä≤ e‚ÇÑ‚Ä≤ : S ‚ä¢ expr
  t t‚ÇÅ t‚ÇÇ t‚ÇÉ t‚ÇÑ t‚Ä≤ t‚ÇÅ‚Ä≤ t‚ÇÇ‚Ä≤ t‚ÇÉ‚Ä≤ t‚ÇÑ‚Ä≤ : S ‚ä¢ type
  c c‚ÇÅ c‚ÇÇ c‚ÇÉ c‚ÇÑ c‚Ä≤ c‚ÇÅ‚Ä≤ c‚ÇÇ‚Ä≤ c‚ÇÉ‚Ä≤tc‚ÇÑ‚Ä≤ : S ‚ä¢ cstr
  ‚òÖ‚Çñ ‚òÖ‚Çñ‚Ä≤                           : S ‚ä¢ kind

instance syn = mkSyntax _‚ä¢_  `_  Œª { refl ‚Üí refl }
open Syntax syn hiding (_‚ä¢_; `_) public